# Generated by Django 5.1.12 on 2025-09-20 16:59

import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=50, verbose_name='Category Name')),
                ('slug', models.SlugField(blank=True, unique=True, verbose_name='Slug')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('icon', models.CharField(blank=True, help_text='FontAwesome icon class name', max_length=50, verbose_name='Icon')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['is_active'], name='news_catego_is_acti_4de217_idx')],
            },
        ),
        migrations.CreateModel(
            name='NewsSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Source Name')),
                ('slug', models.SlugField(blank=True, unique=True, verbose_name='Slug')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('base_url', models.URLField(help_text='Main website URL', verbose_name='Base URL')),
                ('rss_feed', models.URLField(blank=True, verbose_name='RSS Feed URL')),
                ('api_endpoint', models.URLField(blank=True, verbose_name='API Endpoint')),
                ('source_type', models.CharField(choices=[('rss', 'RSS Feed'), ('website', 'Website Scraping'), ('api', 'API Integration')], default='rss', max_length=10, verbose_name='Source Type')),
                ('primary_category', models.CharField(choices=[('general', 'General'), ('technology', 'Technology'), ('business', 'Business'), ('politics', 'Politics'), ('sports', 'Sports'), ('entertainment', 'Entertainment'), ('health', 'Health'), ('science', 'Science'), ('world', 'World')], default='general', max_length=20, verbose_name='Primary Category')),
                ('country', models.CharField(help_text='2-letter ISO country code', max_length=2, verbose_name='Country Code')),
                ('language', models.CharField(default='en', max_length=10, verbose_name='Language')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('scrape_frequency', models.IntegerField(default=60, help_text='How often to scrape this source in minutes', verbose_name='Scrape Frequency (minutes)')),
                ('max_articles_per_scrape', models.IntegerField(default=50, verbose_name='Max Articles per Scrape')),
                ('last_scraped', models.DateTimeField(blank=True, null=True, verbose_name='Last Scraped')),
                ('total_articles_scraped', models.IntegerField(default=0, verbose_name='Total Articles Scraped')),
                ('success_rate', models.FloatField(default=100.0, help_text='Percentage of successful scraping attempts', verbose_name='Success Rate')),
                ('average_response_time', models.FloatField(blank=True, null=True, verbose_name='Average Response Time (seconds)')),
                ('credibility_score', models.FloatField(default=5.0, help_text='Rating from 1-10 based on source reliability', verbose_name='Credibility Score')),
                ('bias_rating', models.CharField(choices=[('left', 'Left'), ('center', 'Center'), ('right', 'Right')], default='center', max_length=10, verbose_name='Political Bias')),
                ('custom_selectors', models.JSONField(blank=True, default=dict, help_text='Custom CSS selectors for website scraping', verbose_name='Custom CSS Selectors')),
                ('headers', models.JSONField(blank=True, default=dict, help_text='Custom headers for scraping requests', verbose_name='HTTP Headers')),
            ],
            options={
                'verbose_name': 'News Source',
                'verbose_name_plural': 'News Sources',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['source_type'], name='news_newsso_source__5a7663_idx'), models.Index(fields=['primary_category'], name='news_newsso_primary_62a8fb_idx'), models.Index(fields=['is_active'], name='news_newsso_is_acti_4ba705_idx'), models.Index(fields=['last_scraped'], name='news_newsso_last_sc_40464b_idx')],
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('title', models.CharField(max_length=500, verbose_name='Title')),
                ('url', models.URLField(unique=True, verbose_name='Article URL')),
                ('content', models.TextField(verbose_name='Content')),
                ('summary', models.TextField(blank=True, verbose_name='Summary')),
                ('author', models.CharField(blank=True, max_length=200, verbose_name='Author')),
                ('published_at', models.DateTimeField(verbose_name='Published At')),
                ('scraped_at', models.DateTimeField(auto_now_add=True, verbose_name='Scraped At')),
                ('top_image', models.URLField(blank=True, verbose_name='Top Image')),
                ('sentiment_score', models.FloatField(blank=True, help_text='Score from -1 (negative) to 1 (positive)', null=True, verbose_name='Sentiment Score')),
                ('sentiment_label', models.CharField(blank=True, choices=[('positive', 'Positive'), ('neutral', 'Neutral'), ('negative', 'Negative')], max_length=10, verbose_name='Sentiment Label')),
                ('read_time', models.IntegerField(default=1, help_text='Estimated reading time in minutes', verbose_name='Estimated Read Time (minutes)')),
                ('view_count', models.IntegerField(default=0, verbose_name='View Count')),
                ('keywords', models.JSONField(blank=True, default=list, help_text='List of extracted keywords', verbose_name='Keywords')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Is Featured')),
                ('is_published', models.BooleanField(default=True, verbose_name='Is Published')),
                ('categories', models.ManyToManyField(blank=True, related_name='articles', to='news.category', verbose_name='Categories')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articles', to='news.newssource', verbose_name='News Source')),
            ],
            options={
                'verbose_name': 'Article',
                'verbose_name_plural': 'Articles',
                'ordering': ['-published_at'],
            },
        ),
        migrations.CreateModel(
            name='ReadArticle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='read_by', to='news.article')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='read_articles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='UserInteraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('action', models.CharField(choices=[('view', 'View'), ('read', 'Read'), ('like', 'Like'), ('bookmark', 'Bookmark'), ('share', 'Share')], max_length=10, verbose_name='Action')),
                ('reading_time', models.IntegerField(blank=True, help_text='Time spent reading in seconds', null=True, verbose_name='Reading Time (seconds)')),
                ('scroll_depth', models.IntegerField(blank=True, help_text='Percentage of article scrolled', null=True, verbose_name='Scroll Depth (%)')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interactions', to='news.article', verbose_name='Article')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interactions', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'User Interaction',
                'verbose_name_plural': 'User Interactions',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='UserPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('email_notifications', models.BooleanField(default=True)),
                ('notification_frequency', models.CharField(choices=[('instant', 'Instant'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('never', 'Never')], default='daily', max_length=20)),
                ('preferred_categories', models.ManyToManyField(blank=True, to='news.category')),
                ('preferred_sources', models.ManyToManyField(blank=True, to='news.newssource')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='news_preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BookmarkedArticle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('notes', models.TextField(blank=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookmarked_by', to='news.article')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookmarks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created'],
                'unique_together': {('user', 'article')},
            },
        ),
        migrations.AddIndex(
            model_name='article',
            index=models.Index(fields=['is_published'], name='news_articl_is_publ_0702a7_idx'),
        ),
        migrations.AddIndex(
            model_name='article',
            index=models.Index(fields=['is_featured'], name='news_articl_is_feat_0df2de_idx'),
        ),
        migrations.AddIndex(
            model_name='article',
            index=models.Index(fields=['published_at'], name='news_articl_publish_90ca8c_idx'),
        ),
        migrations.AddIndex(
            model_name='article',
            index=models.Index(fields=['scraped_at'], name='news_articl_scraped_e0f02b_idx'),
        ),
        migrations.AddIndex(
            model_name='article',
            index=models.Index(fields=['view_count'], name='news_articl_view_co_9cb92e_idx'),
        ),
        migrations.AddIndex(
            model_name='article',
            index=models.Index(fields=['sentiment_label'], name='news_articl_sentime_20410a_idx'),
        ),
        migrations.AddIndex(
            model_name='article',
            index=models.Index(fields=['source'], name='news_articl_source__2047db_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='readarticle',
            unique_together={('user', 'article')},
        ),
        migrations.AddIndex(
            model_name='userinteraction',
            index=models.Index(fields=['user'], name='news_userin_user_id_cb7ec3_idx'),
        ),
        migrations.AddIndex(
            model_name='userinteraction',
            index=models.Index(fields=['article'], name='news_userin_article_4fcf21_idx'),
        ),
        migrations.AddIndex(
            model_name='userinteraction',
            index=models.Index(fields=['action'], name='news_userin_action_8f7726_idx'),
        ),
        migrations.AddIndex(
            model_name='userinteraction',
            index=models.Index(fields=['created'], name='news_userin_created_4ff9de_idx'),
        ),
        migrations.AddConstraint(
            model_name='userinteraction',
            constraint=models.UniqueConstraint(condition=models.Q(('action__in', ['like', 'bookmark'])), fields=('user', 'article', 'action'), name='unique_user_article_action'),
        ),
    ]
